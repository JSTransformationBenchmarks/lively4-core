import Person from "./person.js";

function /*example:*//*example:*//*example:*/binarySearch/*{"id":"2c2f_0e83_a843","name":{"mode":"input","value":"Simple"},"color":"hsl(40, 30%, 70%)","values":{"array":{"mode":"input","value":"[1, 3, 5, 6, 7]"},"element":{"mode":"input","value":"6"},"compare":{"mode":"select","value":"5bc0_ce94_823c"}},"instanceId":{"mode":"input","value":""},"prescript":"","postscript":""}*//*{"id":"2eb8_49b1_f8a0","name":{"mode":"input","value":"Not found"},"color":"hsl(150, 30%, 70%)","values":{"array":{"mode":"select","value":"3c19_9766_c784"},"element":{"mode":"input","value":"10"},"compare":{"mode":"select","value":"5bc0_ce94_823c"}},"instanceId":{"mode":"input","value":""},"prescript":"","postscript":""}*//*{"id":"4361_c4c0_1ea3","name":{"mode":"input","value":"Person"},"color":"hsl(10, 30%, 70%)","values":{"array":{"mode":"select","value":"5b3f_303e_7e45"},"element":{"mode":"input","value":"\"Sarah\""},"compare":{"mode":"select","value":"c2ac_b828_ebbe"}},"instanceId":{"mode":"input","value":""},"prescript":"","postscript":""}*/(array, element, compare) {
    var low = 0;
    var high = array.length - 1;
    /*slider:*/while/*{}*/ (low <= high) {
        var mid = (low + high) >> 1;
        var /*probe:*/compareResult/*{}*/ = compare(element, array[mid]);
        if (compareResult > 0) {
            low = mid + 1;
        } else if(compareResult < 0) {
            high = mid - 1;
        } else {
            /*probe:*/return/*{}*/ mid;
        }
    }
    /*probe:*/return/*{}*/ -1;
}/* Context: {"context":{"prescript":"","postscript":""},"customInstances":[{"id":"3c19_9766_c784","name":"Primes until 1000","code":"return [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];"},{"id":"5bc0_ce94_823c","name":"Compare numbers","code":"return (a,b) => a-b;"},{"id":"5b3f_303e_7e45","name":"Person array","code":"return [\"AARON\", \"ABIGAIL\", \"ADAM\", \"AISHA\", \"ALBERT\", \"ALBIE\", \"ALEX\", \"ALEXANDER\", \"ALFIE\", \"ALICE\", \"AMBER\", \"AMELIA\", \"AMELIE\", \"ANNA\", \"ANNABELLE\", \"ARABELLA\", \"ARCHIE\", \"ARIA\", \"ARLO\", \"ARTHUR\", \"AUSTIN\", \"AVA\", \"BEATRICE\", \"BELLA\", \"BENJAMIN\", \"BLAKE\", \"BOBBY\", \"CALEB\", \"CARTER\", \"CHARLES\", \"CHARLIE\", \"CHARLOTTE\", \"CHLOE\", \"CLARA\", \"DAISY\", \"DANIEL\", \"DARCEY\", \"DARCIE\", \"DARCY\", \"DAVID\", \"DEXTER\", \"DYLAN\", \"EDWARD\", \"ELEANOR\", \"ELIJAH\", \"ELIZA\", \"ELIZABETH\", \"ELLA\", \"ELLIE\", \"ELLIOT\", \"ELLIOTT\", \"ELLIS\", \"ELSIE\", \"EMILIA\", \"EMILY\", \"EMMA\", \"ERIN\", \"ESME\", \"ETHAN\", \"EVA\", \"EVELYN\", \"EVIE\", \"EZRA\", \"FELICITY\", \"FELIX\", \"FINLEY\", \"FINN\", \"FLORENCE\", \"FRANCESCA\", \"FRANKIE\", \"FREDDIE\", \"FREDERICK\", \"FREYA\", \"GABRIEL\", \"GEORGE\", \"GEORGIA\", \"GRACE\", \"GRACIE\", \"HANNAH\", \"HARLEY\", \"HARPER\", \"HARRIET\", \"HARRISON\", \"HARRY\", \"HARVEY\", \"HEIDI\", \"HENRY\", \"HOLLY\", \"HUGO\", \"IBRAHIM\", \"IMOGEN\", \"IRIS\", \"ISAAC\", \"ISABELLA\", \"ISABELLE\", \"ISLA\", \"IVY\", \"JACK\", \"JACKSON\", \"JACOB\", \"JAKE\", \"JAMES\", \"JASMINE\", \"JASPER\", \"JAXON\", \"JAYDEN\", \"JENSON\", \"JESSE\", \"JESSICA\", \"JOSEPH\", \"JOSHUA\", \"JUDE\", \"JULIA\", \"KAI\", \"LAYLA\", \"LEAH\", \"LEO\", \"LEON\", \"LEWIS\", \"LEXI\", \"LIAM\", \"LILLY\", \"LILY\", \"LOGAN\", \"LOLA\", \"LOTTIE\", \"LOUIE\", \"LOUIS\", \"LUCA\", \"LUCAS\", \"LUCY\", \"LUKE\", \"LUNA\", \"LYDIA\", \"MADDISON\", \"MAISIE\", \"MARIA\", \"MARTHA\", \"MARYAM\", \"MASON\", \"MATILDA\", \"MATTHEW\", \"MAX\", \"MAYA\", \"MEGAN\", \"MIA\", \"MICHAEL\", \"MILA\", \"MILLIE\", \"MOHAMMAD\", \"MOHAMMED\", \"MOLLY\", \"MUHAMMAD\", \"NANCY\", \"NATHAN\", \"NOAH\", \"OLIVER\", \"OLIVIA\", \"OLLIE\", \"OSCAR\", \"PENELOPE\", \"PHOEBE\", \"POPPY\", \"REGGIE\", \"REUBEN\", \"RILEY\", \"ROBYN\", \"ROMAN\", \"RONNIE\", \"RORY\", \"ROSE\", \"ROSIE\", \"RUBY\", \"RYAN\", \"SAMUEL\", \"SARA\", \"SARAH\", \"SCARLETT\", \"SEBASTIAN\", \"SIENNA\", \"SOFIA\", \"SOPHIA\", \"SOPHIE\", \"STANLEY\", \"SUMMER\", \"TEDDY\", \"THEA\", \"THEO\", \"THEODORE\", \"THOMAS\", \"TOBY\", \"TOMMY\", \"TYLER\", \"VICTORIA\", \"VIOLET\", \"WILLIAM\", \"WILLOW\", \"ZACHARY\", \"ZARA\", \"ZOE\"]\n  .map((name)=>new Person(name));"},{"id":"c2ac_b828_ebbe","name":"Person name compare","code":"return (a,b) => a.toLowerCase().localeCompare(b.name.toLowerCase());"}]} */